#!/bin/sh

_log() {
	printf "$(tput setaf 5)-->$(tput setaf 2) %s$(tput setaf 7)\n" "$@"
}

_log_err() {
	printf "$(tput setaf 6)-->$(tput setaf 9) %s$(tput setaf 7)\n" "$@"
	exit 1
}

[ -z "$POLOCHON_TOKEN" ] && _log_err "Missing polochon token"
POLOCHON_URL="https://polochon.quimbo.fr"
TMPDIR=${TMPDIR:=/tmp}
CACHE_DELAY=$(( 60 * 5 ))

_usage() {
	echo "$(basename "$0"):"
	echo "    m|movie|movies - Choose and stream a movie"
	echo "    s|show|shows   - Choose and stream a show episode"
	echo "    c|clean        - Cleanup the cache"
	exit 0
}

_polochon_call() {
	method=$1
	resource=$2
	curl --silent --show-error \
		-X "$method" \
		-H "Content-Type: application/json" \
		-H "X-Auth-Token: $POLOCHON_TOKEN" \
		"$POLOCHON_URL/$resource"
}

_fetch() {
	uri=$1
	cache="$TMPDIR/polochon_$uri.json"

	last_update=$(stat -c "%Y" "$cache" 2>/dev/null || true)
	if [ -n "$last_update" ]; then
		now=$(date +%s)
		diff=$(( now - last_update ))
		[ "$diff" -ge "$CACHE_DELAY" ] && rm "$cache"
	fi

	[ -f "$cache" ] || _polochon_call "GET" "$uri" > "$cache"
	cat "$cache"
}

_fzf() {
	header=$1
	shift
	fzf --prompt="> " \
		--no-multi \
		--header="$header" \
		--color dark,hl:33,hl+:234,fg+:234,bg+:136 \
		--color info:254,prompt:33,spinner:136,pointer:136,marker:136 \
		"$@"
}

_mpv() {
	title=$1
	uri=$2
	subtitles=$3

	sub_cmd=
	for lang in $subtitles; do
		sub_cmd="$sub_cmd --sub-file=$uri/subtitles/$lang/download?lang=$lang"
	done

	_log "Streaming \"$title\""
	mpv \
		--http-header-fields="X-Auth-Token: $POLOCHON_TOKEN" \
		--title="$title" \
		$sub_cmd \
		"$uri/download?title=$title"
}

_movies() {
	title=$(_fetch "movies" | jq -r '.[] | .title?' | sort | _fzf "Choose movie")
	[ -n "$title" ] || _log_err "No movie selected"

	movie=$(_fetch "movies" | jq -r -c --arg title "$title" 'to_entries | .[] | select(.value.title == $title)')

	imdb_id=$(jq -n -r --argjson movie "$movie" '$movie.key')
	subtitles=$(jq -n -r --argjson movie "$movie" '$movie.value.subtitles[] | select(.embedded == false)? | .lang')

	_log "Imdb: https://imdb.com/title/$imdb_id"

	movie_uri="$POLOCHON_URL/movies/$imdb_id"
	_mpv "$title" "$movie_uri" "$subtitles"
}

_shows() {
	title=$(_fetch "shows" | jq -r '.[] | .title?' | _fzf "Choose show")
	[ -n "$title" ] || _log_err "No show selected"

	show=$(_fetch "shows" | jq -r -c --arg title "$title" 'to_entries | .[] | select(.value.title == $title)')
	imdb_id=$(jq -r -n --argjson show "$show" '$show.key')

	season=$(jq -r -n \
		--argjson show "$show" \
		'$show.value.seasons | keys | .[]' \
		| _fzf "Choose season")
	[ -n "$season" ] || _log_err "No season selected"

	episode=$(jq -r -n \
		--argjson show "$show" \
		--arg season "$season" \
		'$show.value.seasons | .[$season] | keys | .[]' \
		| _fzf "Choose episode")
	[ -n "$episode" ] || _log_err "No episode selected"

	subtitles=$(jq -r -n \
		--argjson show "$show" \
		--arg season "$season" \
		--arg episode "$episode" \
		'$show.value.seasons | .[$season] | .[$episode] | .subtitles[] | select(.embedded == false)? | .lang')


	_log "Imdb: https://imdb.com/title/$imdb_id"

	episode_title="$title S${season}E$episode"
	episode_uri="$POLOCHON_URL/shows/$imdb_id/seasons/$season/episodes/$episode"
	_mpv "$episode_title" "$episode_uri" "$subtitles"
}

_clean_cache() {
	_log "Cleaning cache"
	rm "$TMPDIR/polochon_*.json" 2>/dev/null
}

case "$1" in
	m|movie|movies) _movies       ;;
	s|show|shows)   _shows        ;;
	c|clean)        _clean_cache  ;;
	*)              _usage        ;;
esac
